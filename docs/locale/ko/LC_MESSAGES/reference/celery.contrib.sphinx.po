# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2018, Ask Solem & contributors
# This file is distributed under the same license as the Celery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Celery 4.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-22 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../reference/celery.contrib.sphinx.rst:3
msgid "celery.contrib.sphinx"
msgstr ""

#: celery.contrib.sphinx:1 of
msgid "Sphinx documentation plugin used to document tasks."
msgstr ""

#: celery.contrib.sphinx:4 of
msgid "Introduction"
msgstr ""

#: celery.contrib.sphinx:7 of
msgid "Usage"
msgstr ""

#: celery.contrib.sphinx:9 of
msgid "Add the extension to your :file:`docs/conf.py` configuration module:"
msgstr ""

#: celery.contrib.sphinx:16 of
msgid ""
"If you'd like to change the prefix for tasks in reference documentation "
"then you can change the ``celery_task_prefix`` configuration value:"
msgstr ""

#: celery.contrib.sphinx:23 of
msgid ""
"With the extension installed `autodoc` will automatically find task "
"decorated objects (e.g. when using the automodule directive) and generate"
" the correct (as well as add a ``(task)`` prefix), and you can also refer"
" to the tasks using `:task:proj.tasks.add` syntax."
msgstr ""

#: celery.contrib.sphinx:29 of
msgid "Use ``.. autotask::`` to alternatively manually document a task."
msgstr ""

#: celery.contrib.sphinx.TaskDirective:1 of
msgid "Sphinx task directive."
msgstr ""

#: celery.contrib.sphinx.TaskDirective.get_signature_prefix:1 of
msgid "May return a prefix to put before the object name in the signature."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter:1 of
msgid "Document task definitions."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.can_document_member:1 of
msgid "Called to see if a member can be documented by this documenter."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.check_module:1 of
msgid ""
"Check if *self.object* is really defined in the module given by "
"*self.modname*."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.document_members:1 of
msgid "Generate reST for member documentation."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.document_members:3 of
msgid ""
"If *all_members* is True, do all members, else those given by "
"*self.options.members*."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.format_args:1 of
msgid "Format the argument signature of *self.object*."
msgstr ""

#: celery.contrib.sphinx.TaskDocumenter.format_args:3 of
msgid "Should return None if the object does not have a signature."
msgstr ""

#: celery.contrib.sphinx.autodoc_skip_member_handler:1 of
msgid "Handler for autodoc-skip-member event."
msgstr ""

#: celery.contrib.sphinx.setup:1 of
msgid "Setup Sphinx extension."
msgstr ""

