# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2018, Ask Solem & contributors
# This file is distributed under the same license as the Celery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Celery 4.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-22 13:44+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../reference/celery.utils.debug.rst:3
msgid "``celery.utils.debug``"
msgstr ""

#: ../../reference/celery.utils.debug.rst:9
msgid "Sampling Memory Usage"
msgstr ""

#: ../../reference/celery.utils.debug.rst:11
msgid ""
"This module can be used to diagnose and sample the memory usage used by "
"parts of your application."
msgstr ""

#: ../../reference/celery.utils.debug.rst:14
msgid "For example, to sample the memory usage of calling tasks you can do this:"
msgstr ""

#: ../../reference/celery.utils.debug.rst:34
msgid "API Reference"
msgstr ""

#: celery.utils.debug:1 of
msgid "Utilities for debugging memory usage, blocking calls, etc."
msgstr ""

#: celery.utils.debug.sample_mem:1 of
msgid "Sample RSS memory usage."
msgstr ""

#: celery.utils.debug.sample_mem:3 of
msgid "Statistics can then be output by calling :func:`memdump`."
msgstr ""

#: celery.utils.debug.memdump:1 of
msgid "Dump memory statistics."
msgstr ""

#: celery.utils.debug.memdump:3 of
msgid ""
"Will print a sample of all RSS memory samples added by calling "
":func:`sample_mem`, and in addition print used RSS memory after "
":func:`gc.collect`."
msgstr ""

#: celery.utils.debug.sample:1 of
msgid "Given a list `x` a sample of length ``n`` of that list is returned."
msgstr ""

#: celery.utils.debug.sample:3 of
msgid ""
"For example, if `n` is 10, and `x` has 100 items, a list of every tenth. "
"item is returned."
msgstr ""

#: celery.utils.debug.sample:6 of
msgid "``k`` can be used as offset."
msgstr ""

#: celery.utils.debug.mem_rss:1 of
msgid "Return RSS memory usage as a humanized string."
msgstr ""

#: celery.utils.debug.ps:1 of
msgid "Return the global :class:`psutil.Process` instance."
msgstr ""

#: celery.utils.debug.ps:3 of
msgid "Returns :const:`None` if :pypi:`psutil` is not installed."
msgstr ""

