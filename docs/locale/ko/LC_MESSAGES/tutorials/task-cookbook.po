# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2018, Ask Solem & contributors
# This file is distributed under the same license as the Celery package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Celery 4.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-22 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../tutorials/task-cookbook.rst:5
msgid "Task Cookbook"
msgstr ""

#: ../tutorials/task-cookbook.rst:13
msgid "Ensuring a task is only executed one at a time"
msgstr ""

#: ../tutorials/task-cookbook.rst:15
msgid "You can accomplish this by using a lock."
msgstr ""

#: ../tutorials/task-cookbook.rst:17
msgid ""
"In this example we'll be using the cache framework to set a lock that's "
"accessible for all workers."
msgstr ""

#: ../tutorials/task-cookbook.rst:20
msgid ""
"It's part of an imaginary RSS feed importer called `djangofeeds`. The "
"task takes a feed URL as a single argument, and imports that feed into a "
"Django model called `Feed`. We ensure that it's not possible for two or "
"more workers to import the same feed at the same time by setting a cache "
"key consisting of the MD5 check-sum of the feed URL."
msgstr ""

#: ../tutorials/task-cookbook.rst:26
msgid ""
"The cache key expires after some time in case something unexpected "
"happens, and something always will..."
msgstr ""

#: ../tutorials/task-cookbook.rst:29
msgid "For this reason your tasks run-time shouldn't exceed the timeout."
msgstr ""

#: ../tutorials/task-cookbook.rst:34
msgid ""
"In order for this to work correctly you need to be using a cache backend "
"where the ``.add`` operation is atomic.  ``memcached`` is known to work "
"well for this purpose."
msgstr ""

